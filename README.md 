# Projet Docker-Compose : API Flask & PostgreSQL  

## 🚀 Description  
Ce projet met en place une API Flask connectée à une base de données PostgreSQL à l'aide de Docker et Docker Compose.  

## 📂 Structure du projet  

/docker-compose-project-SANHAJI
│── /app
│   ├── app.py            # Code Flask
│   ├── requirements.txt   # Dépendances Python
│   ├── Dockerfile        # Dockerfile pour Flask
│── docker-compose.yml     # Configuration de docker-compose
│── .env                   # Variables d'environnement
│── README.md              # Documentation


## 🛠️ Prérequis  
Avant de commencer, assurez-vous d'avoir :  
Docker et Docker Compose installés.

## 🚀 Lancer l'application  
1. Clonez ce projet ou téléchargez-le en `.zip`.  
2. Accédez au dossier du projet :  
   ```
   bash
   cd docker-compose-project

   ```
3. Construisez et démarrez les conteneurs : 
```
   docker-compose up --build

```
4. Ouvrez votre navigateur et accédez à : 
- http://localhost:5001/ → Affiche un message de bienvenue
- http://localhost:5001/data → Récupère les données de la base de données

## 🛑 Arrêter les conteneurs : 
```
docker-compose down
```

## 🗂️ Explication des fichiers
- app.py : Code de l'API Flask
- Dockerfile : Conteneurise l'application Flask
- docker-compose.yml : Orchestration des services
- .env : Variables d’environnement
- requirements.txt : Dépendances Python

## 📌 Fonctionnalités supplémentaires
- Communication entre Flask et PostgreSQL via Docker Network
- Volume persistant pour ne pas perdre les données de la base

## ✅ Respect des exigences du projet  

| Condition | Explication |  
|-----------|------------|  
| **Au moins deux conteneurs** | Le projet utilise `web` (Flask) et `db` (PostgreSQL). |  
| **Communication entre conteneurs (TCP/IP)** | Flask (`web`) accède à PostgreSQL (`db`) via le réseau Docker `mynetwork`. |  
| **Lancement via `docker-compose`** | Utilisation de `docker-compose.yml` pour gérer et lancer les conteneurs. |  
| **Volume pour la persistance des données** | Volume nommé `db_data` pour stocker les données PostgreSQL. |  
| **Un conteneur issu d'un `Dockerfile`** | Le conteneur `web` est construit à partir du `Dockerfile` dans `./app`. |  
| **Autres options `docker-compose`** | Variables d’environnement, réseau personnalisé, `depends_on`, ports exposés (`5001:5000`). |  

